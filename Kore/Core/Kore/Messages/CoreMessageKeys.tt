<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml" #>
<#@ output extension=".cs" #>
<#
    Dictionary<string, string> messages = new Dictionary<string, string>();
    Dictionary<string, string> messageComments = new Dictionary<string, string>();
    string resxFilePath = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), "Resource/CoreMessages.resx");
    XmlDocument doc = new XmlDocument();
    doc.Load(resxFilePath);
    foreach (XmlNode node in doc.DocumentElement.ChildNodes)
    {
        if (node.Attributes != null)
        {
            var nameAttr = node.Attributes["name"];
            var valueNode = node.SelectSingleNode("value");
            var commentNode = node.SelectSingleNode("comment");
            if (node.Name == "data" && nameAttr != null && valueNode != null)
            {
                messages.Add(nameAttr.InnerText, valueNode.InnerText);
                if (commentNode != null)
                {
                    messageComments.Add(nameAttr.InnerText, commentNode.InnerText);
                }
            }
        }
    }
#>
// ***********************************************************************
// <copyright file="CoreMessageKeys.cs" company="CAI">
//     Copyright © CAI 2016
// </copyright>
// ***********************************************************************

namespace CAI.Core.Messages
{
    /// <summary>
    /// The collection of keys generated by the EN Core Messages resource file.
    /// </summary>
    public class CoreMessageKeys
    {
<#
    foreach (var m in messages)
    {
#>
        /// <summary>
        /// The key for the message similar to "<#= m.Value #>".<#= messageComments.ContainsKey(m.Key) ? " " + messageComments[m.Key] : "" #>
        /// </summary>
        public static readonly string <#= m.Key #> = "<#= m.Key #>";

<#
    }
#>
	}
}